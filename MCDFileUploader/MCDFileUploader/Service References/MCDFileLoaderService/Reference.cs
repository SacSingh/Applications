//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PostFileFtp.MCDFileLoaderService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/MCDFileLoader")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DealerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FTPLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FTPPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FTPUsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DealerId {
            get {
                return this.DealerIdField;
            }
            set {
                if ((this.DealerIdField.Equals(value) != true)) {
                    this.DealerIdField = value;
                    this.RaisePropertyChanged("DealerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FTPLocation {
            get {
                return this.FTPLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.FTPLocationField, value) != true)) {
                    this.FTPLocationField = value;
                    this.RaisePropertyChanged("FTPLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FTPPassword {
            get {
                return this.FTPPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.FTPPasswordField, value) != true)) {
                    this.FTPPasswordField = value;
                    this.RaisePropertyChanged("FTPPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FTPUsername {
            get {
                return this.FTPUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.FTPUsernameField, value) != true)) {
                    this.FTPUsernameField = value;
                    this.RaisePropertyChanged("FTPUsername");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MCDFileLoaderService.IFileLoader")]
    public interface IFileLoader {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileLoader/LogIn", ReplyAction="http://tempuri.org/IFileLoader/LogInResponse")]
        PostFileFtp.MCDFileLoaderService.UserInfo LogIn(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileLoader/LogIn", ReplyAction="http://tempuri.org/IFileLoader/LogInResponse")]
        System.Threading.Tasks.Task<PostFileFtp.MCDFileLoaderService.UserInfo> LogInAsync(string username, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileLoaderChannel : PostFileFtp.MCDFileLoaderService.IFileLoader, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileLoaderClient : System.ServiceModel.ClientBase<PostFileFtp.MCDFileLoaderService.IFileLoader>, PostFileFtp.MCDFileLoaderService.IFileLoader {
        
        public FileLoaderClient() {
        }
        
        public FileLoaderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileLoaderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileLoaderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileLoaderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PostFileFtp.MCDFileLoaderService.UserInfo LogIn(string username, string password) {
            return base.Channel.LogIn(username, password);
        }
        
        public System.Threading.Tasks.Task<PostFileFtp.MCDFileLoaderService.UserInfo> LogInAsync(string username, string password) {
            return base.Channel.LogInAsync(username, password);
        }
    }
}
